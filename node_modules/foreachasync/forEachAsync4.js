/*jshint -W054 */
;(function (exports) {
  'use strict';

  var BREAK = {}
    , exp = {}
    ;

  function create(PromiseA) {
    PromiseA = PromiseA.Promise || PromiseA;


    function forEachAsync(arr, fn, thisArg) {
      var result = PromiseA.resolve()
        ;

      arr.forEach(function (item, k) {
        result = result.then(function () {

          var ret
            ;

          if (thisArg) {
            console.log('hello', item);
            ret = new Promise(function (resolve, reject) {
              var r = fn.call(thisArg, resolve, item, k, arr, reject);
              return compat(r, resolve, reject);
            });
          } else {
            console.log('bye', item, k);
            ret = result = fn(item, k, arr);
          }

          if (!ret.then) {
            ret = PromiseA.resolve(result);
          }

          ret.then(function (val) {
            if (val === forEachAsync.__BREAK) {
              return PromiseA.reject(new Error('break'));
              //throw new Error('break');
            }

            return val;
          });
        });
      });

      result.catch(function (e) {
        if ('break' !== e.message) {
          throw e;
        }
      });

      return result;
    }

    forEachAsync.__BREAK = BREAK;

    return forEachAsync;
  }

  /*
  exp = forEachAsync.forEachAsync = forEachAsync;
  exports = exports.forEachAsync = forEachAsync.forEachAsycn = forEachAsync;
  exports.create = forEachAsync.create = function () {};
  */


  try { 
   exp.forEachAsync = create(require('bluebird'));
  } catch(e) {
    if ('undefined' !== typeof PromiseA) {
      exp.forEachAsync = create(Promise);
    } else {
      try { 
       exp.forEachAsync = create(require('es6-promise'));
      } catch(e) {
        try { 
         exp.forEachAsync = create(require('rsvp'));
        } catch(e) {
          console.warning('forEachAsync needs requires a promise implementation and your environment does not provide one.'
            + '\nYou may provide your own by calling forEachAsync.create(Promise) with a PromiseA+ implementation'
          );
        }
      }
    }
  }

  exports.forEachAsync = exp.forEachAsync.forEachAsync = exp.forEachAsync;
  // exports.forEachAsync.create = 
  exports.create = create;

  console.log('Happy 3');
}('undefined' !== typeof exports && exports || new Function('return this')()));
